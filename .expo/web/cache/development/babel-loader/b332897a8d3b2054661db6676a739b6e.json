{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\SoulCode\\\\Reactnt\\\\mobile\\\\src\\\\componentes\\\\Imc.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles } from \"../../Style/style1\";\nexport default function Imc() {\n  var _useState = useState({\n    altura: 0,\n    peso: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      valor = _useState2[0],\n      setValor = _useState2[1];\n\n  var _useState3 = useState({\n    resultado: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      calculo = _useState4[0],\n      setCalculo = _useState4[1];\n\n  var handleInputChange = function handleInputChange(parametro, value) {\n    setValor(_objectSpread(_objectSpread({}, valor), {}, _defineProperty({}, parametro, value)));\n  };\n\n  var calculoImc = function calculoImc() {\n    var imc = (valor.peso / (valor.altura * valor.altura)).toFixed(2);\n\n    if (imc < 17) {\n      setCalculo(_objectSpread(_objectSpread({}, calculo), {}, {\n        resultado: imc + \". \\n\\nVoc\\xEA est\\xE1 muito abaixo do peso.\"\n      }));\n    } else if (imc >= 17 && imc <= 18.4) {\n      setCalculo(_objectSpread(_objectSpread({}, calculo), {}, {\n        resultado: imc + \". \\n\\nVoc\\xEA est\\xE1 no peso ideal, tem menores chances de ter problemas cardiacos e vasculares.\"\n      }));\n    } else if (imc >= 18.5 && imc <= 24.9) {\n      setCalculo(_objectSpread(_objectSpread({}, calculo), {}, {\n        resultado: imc + \". \\n\\nVoc\\xEA est\\xE1 no peso ideal, tem menores chances de ter problemas cardiacos e vasculares.\"\n      }));\n    } else if (imc >= 25 && imc <= 29.9) {\n      setCalculo(_objectSpread(_objectSpread({}, calculo), {}, {\n        resultado: imc + \". \\n\\nVoc\\xEA est\\xE1 acima do peso, maior probalidade de fadiga, m\\xE1 circula\\xE7\\xE3o e varizes.\"\n      }));\n    } else if (imc >= 30) {\n      setCalculo(_objectSpread(_objectSpread({}, calculo), {}, {\n        resultado: imc + \". \\n\\nMenino, Cuidado. Olha o Fogo!!!!!!\"\n      }));\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.imcContent2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.linha1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"styl\", React.createElement(TextInput, {\n    style: styles.imcLinha,\n    placeholder: \"Digite seu peso, ex: 74.5\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(entrada) {\n      return handleInputChange(\"peso\", entrada);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.imcLinha,\n    placeholder: \"Digite sua altura, ex: 1.80\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(entrada) {\n      return handleInputChange(\"altura\", entrada);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.touchImc,\n    onPress: calculoImc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.touchText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Resultado\")), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"O resultado do IMC \\xE9:  \" + calculo.resultado, \" \"));\n}","map":{"version":3,"sources":["E:/SoulCode/Reactnt/mobile/src/componentes/Imc.jsx"],"names":["React","useState","styles","Imc","altura","peso","valor","setValor","resultado","calculo","setCalculo","handleInputChange","parametro","value","calculoImc","imc","toFixed","imcContent2","linha1","imcLinha","entrada","touchImc","touchText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, TextInput, TouchableOpacity, Text } from \"react-native\";\r\nimport { styles } from '../../Style/style1';\r\n\r\n\r\nexport default function Imc() {\r\n\r\n  const [valor, setValor] = useState({\r\n      altura: 0,\r\n      peso: 0,\r\n  })\r\n\r\n    const [calculo, setCalculo] = useState({\r\n        resultado : '',\r\n    });\r\n    \r\n    const handleInputChange = (parametro, value) => {\r\n        setValor({\r\n            ...valor, [parametro]: value\r\n        })\r\n    } \r\n    \r\n        const calculoImc = () => {\r\n          \r\n           var imc= ( valor.peso / (valor.altura*valor.altura) ).toFixed(2)\r\n        \r\n            if(imc < 17){\r\n                setCalculo({\r\n                    ...calculo, resultado: `${imc}. \\n\\nVocê está muito abaixo do peso.`\r\n                })\r\n            }else if ((imc >= 17 && imc<=18.4)){\r\n                setCalculo({\r\n                    ...calculo, resultado:`${imc}. \\n\\nVocê está no peso ideal, tem menores chances de ter problemas cardiacos e vasculares.`\r\n                })\r\n\r\n            } else if (imc >=18.5 && imc <= 24.9 ){\r\n                setCalculo({\r\n                    ...calculo, resultado:`${imc}. \\n\\nVocê está no peso ideal, tem menores chances de ter problemas cardiacos e vasculares.`\r\n                })\r\n            }  else if (imc >= 25 && imc <= 29.9){\r\n                setCalculo({\r\n                    ...calculo, resultado:`${imc}. \\n\\nVocê está acima do peso, maior probalidade de fadiga, má circulação e varizes.`\r\n                })\r\n            }  else if (imc >= 30){\r\n                setCalculo({\r\n                    ...calculo, resultado:`${imc}. \\n\\nMenino, Cuidado. Olha o Fogo!!!!!!`\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <View style={styles.imcContent2}>\r\n\r\n            <View style={styles.linha1}>styl\r\n                <TextInput style={styles.imcLinha} placeholder=\"Digite seu peso, ex: 74.5\"\r\n                    keyboardType='numeric'\r\n                    onChangeText={(entrada) => handleInputChange(\"peso\",entrada)\r\n                        } />\r\n                <TextInput style={styles.imcLinha} placeholder=\"Digite sua altura, ex: 1.80\"\r\n                    keyboardType='numeric'\r\n                    onChangeText={(entrada) => handleInputChange(\"altura\",entrada)\r\n                } />\r\n            </View>    \r\n\r\n                <TouchableOpacity style={styles.touchImc} onPress={calculoImc}>\r\n                    <Text style={styles.touchText}>Resultado</Text>         \r\n                </TouchableOpacity>\r\n\r\n            <Text>{`O resultado do IMC é:  ${calculo.resultado}`} </Text>\r\n            \r\n\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}